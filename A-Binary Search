import java.util.*;
import java.io.*;

public class Solution {
    
    public static void main(String[] args) throws IOException {
        
     Scanner sc= new Scanner(System.in);
     int n=sc.nextInt();
     int q=sc.nextInt();
     sc.nextLine();
     
     int [] arr= new int[n];
     for(int i=0; i<n; i++){
         arr[i]=sc.nextInt();
     }
     
     for(int i=0; i<q; i++){
         int num=sc.nextInt();
         if(BinarySearch(num, arr, 0, n-1)){
             System.out.println("YES");
         }
         else{
             System.out.println("NO");
         }
     }
     
    }
    
    public static boolean BinarySearch(int x, int []array, int low, int high){
        
      
  while (low <= high) {
    int mid = low + (high - low) / 2;
 
    if (array[mid] == x)
      return true;
 
    if (array[mid] < x)
      low = mid + 1;
 
    else
      high = mid - 1;
  }
 
  return false;
}
 
    }




///////////////////////////////////////////////////////

import java.util.*;
import java.io.*;

public class Solution {
    
    public static void main(String[] args) throws IOException {
        
     Scanner sc= new Scanner(System.in);
     int n=sc.nextInt();
     int q=sc.nextInt();
     sc.nextLine();
     
     int [] arr= new int[n];
     for(int i=0; i<n; i++){
         arr[i]=sc.nextInt();
     }
     
     for(int i=0; i<q; i++){
         int num=sc.nextInt();
         System.out.println(BinarySearch(num, arr, 0, n-1));
     }
     
    }
    
    public static String BinarySearch(int num, int []arr, int start, int end){
        
        if(start>end){
             return "NO";
        }
        
        int mid=(start+end)/2;
        
        if(arr[mid]==num){
            return "YES";
        }
        
        if(arr[mid]>num){
            return BinarySearch(num, arr, start, mid-1);
        }
        
        else{
            return BinarySearch(num, arr, mid+1, end);
        }
        
    }
}
